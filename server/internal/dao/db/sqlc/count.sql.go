// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.13.0
// source: count.sql

package db

import (
	"context"
	"time"
)

const createVisitCount = `-- name: CreateVisitCount :exec
insert into visit_count (visit_count)
values ($1)
`

func (q *Queries) CreateVisitCount(ctx context.Context, visitCount int64) error {
	_, err := q.db.Exec(ctx, createVisitCount, visitCount)
	return err
}

const getVisitCountsByCreateDate = `-- name: GetVisitCountsByCreateDate :one
select sum(visit_count.visit_count)
from visit_count
where create_date >= $1
  and create_date <= $2
`

type GetVisitCountsByCreateDateParams struct {
	Starttime time.Time `json:"starttime"`
	Endtime   time.Time `json:"endtime"`
}

func (q *Queries) GetVisitCountsByCreateDate(ctx context.Context, arg *GetVisitCountsByCreateDateParams) (int64, error) {
	row := q.db.QueryRow(ctx, getVisitCountsByCreateDate, arg.Starttime, arg.Endtime)
	var sum int64
	err := row.Scan(&sum)
	return sum, err
}
